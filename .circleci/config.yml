version: 2.1

<<<<<<< HEAD
executors:
  default:
    working_directory: ~/repo
    docker:
      - image: cimg/ruby:2.7.6
=======
commands:
  bundle_cache:
    steps:
      - restore_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  

jobs:
  lintering:
    steps:
      - checkout
      - bundle_cache
      - run: bundle install 
      - run:
          name: rubocop
          command: bundle exec rubocop
      - run:
          name: bundle audit
          command: bundle exec bundle audit
      - run:
          name: rails_best_practices
          command: bundle exec rails_best_practices  
      - run:
          name: brakeman
          command: bundle exec brakeman
      - run:
          name: fasterer
          command: bundle exec fasterer
          

  test:
    docker:
      - image: cimg/ruby:2.7.6-node
>>>>>>> cirleci fix
      - image: circleci/postgres:12-alpine
        environment:
          POSTGRES_USER: johnnyGsy
          POSTGRES_DB: rails_7_bookstore_test
          POSTGRES_PASSWORD: "password"
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      BOOK_STORE_DATABASE_PASSWORD: "password"
      RAILS_ENV: test

caches:
  - &bundle_cache gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

commands:
  run_linters:
    description: command to start linters
    steps:
      - run:
          name: rubocop
          command: bundle exec rubocop
      - run:
          name: brakeman
          command: bundle exec brakeman -q
      - run:
<<<<<<< HEAD
          name: fasterer
          command: bundle exec fasterer
      - run:
          name: rails_best_practices
          command: bundle exec rails_best_practices
      - run:
          name: bundler-audit
          command: bundle exec bundler-audit --update


  run_specs:
    steps:
=======
          name: Database setup
          command: bundle exec rails db:schema:load --trace
>>>>>>> fixing circleci,add some linters,lefthook commands added
      - run:
          name: run specs
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                              --out /tmp/test-results/rspec.xml \
                              $TEST_FILES
  setup_environment:
    steps:
      - checkout
<<<<<<< HEAD
      - restore_cache:
          key: *bundle_cache
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: *bundle_cache
          paths:
            - vendor/bundle
=======
      - bundle_cache
      - run: bundle install 
>>>>>>> cirleci fix
      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create
            bundle exec rails db:schema:load

jobs:
  lintering:
    executor: default
    steps:
      - setup_environment
      - run_linters
  run_specs:
    executor: default
    steps:
      - setup_environment
      - run_specs
    parallelism: 4
  

workflows:
<<<<<<< HEAD
  build:
=======
  version: 2.1
  lint_and_test:
>>>>>>> fixing circleci,add some linters,lefthook commands added
    jobs:
      - lintering
      - run_specs:
          requires:
            - lintering
            